# 🏃‍♀️ Continuous Integration and Delivery: Stable
# ===============================================
#
# Note: for this workflow to succeed, the following secrets must be installed
# in the repository:
#
# ``ADMIN_GITHUB_TOKEN``
#     A personal access token of a user with collaborator or better access to
#     the project repository. You can generate this by visiting GitHub →
#     Settings → Developer settings → Personal access tokens → Generate new
#     token. Give the token scopes on ``repo``, ``write:packages``,
#     ``delete:packages``, ``workflow``, and ``read:gpg_key``.
# ``CODE_SIGNING_KEY``
#     A *private* key with which we can sign artifacts.
# ``OSSRH_USERNAME``
#     Username for the Central Repository.
# ``OSSRH_USERNAME``
#     Password for the Central Repository.
#


---

name: 😌 Stable integration & delivery


# Driving Event
# -------------
#
# What event starts this workflow: a push of a release tag. Note: according to
# https://git.io/JJZQt we have been doing our tag matching wrong. It's not
# regexp, it's not glob…it's more like…glob++ 😮

on:
    push:
        branches:
            - 'release/*'


# What to Do
# ----------
#
# Round up, yee-haw!

jobs:
    stable-assembly:
        name: 🐴 Stable Assembly
        runs-on: ubuntu-latest
        steps:
            -
                name: 💳 Checkout
                uses: actions/checkout@v2
                with:
                    lfs: true
                    token: ${{secrets.ADMIN_GITHUB_TOKEN}}
                    fetch-depth: 0
            -
                name: 🏷 Image Tag Determination
                id: tagger
                run: echo "::set-output name=image_tag::$(echo ${{github.ref}} | awk -F/ '{print $NF}')"
            -
                name: 🏞 Image Generation
                uses: peter-evans/repository-dispatch@v1
                with:
                    token: ${{secrets.ADMIN_GITHUB_TOKEN}}
                    event-type: roundup-success
                    client_payload: '{"ref": "${{github.ref}}", "image_tag": "${{steps.tagger.outputs.image_tag}}"}'


...

# -*- mode: yaml; indent: 4; fill-column: 120; coding: utf-8 -*-
